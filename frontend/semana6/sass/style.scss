// variables en css.
//* en sass podemos usar variables para guardar colores.
// de una manera mas organizada.
// fuentes, tipos de letras,
// logicas, para mostrar o no obejtos.
// para declarar una varibles
//   $nombre-de-la-variable: valor;
@import "./variables.scss";

body {
    margin: $padding-1;
    padding: 0;
    font-family: "Courier New", Courier, monospace;
    background-color: $color-princial;
  }
  
  h1 {
    color: $color-red;
    padding: $padding-1;
    font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
  }
  
  //* mixins en SASS
  //* Son un tipo de funcion la cual nos permite
  //* almacenar un codigo y poder reutilizarlo
  //* podemos pasarle variable
  
  //* La idea pasar esto a un mixin y el color de fondo sea una variable
  // El nombre puede ser cualquiera
  @mixin alertita($bg: green, $color-text: #fff) {
    background-color: $bg;
    padding: $padding-1;
    border-radius: $padding-1;
    color: $color-text;
    margin-bottom: $padding-1;
  }
  
  .success {
    // aca en vez de hacer el estilo una y otra solo deberia llamar al mixin
    @include alertita;
  }
  
  .info {
    @include alertita($bg: rgb(37, 194, 241));
  }
  
  .warning {
    @include alertita($bg: rgb(229, 245, 87));
  }
  
  .danger {
    @include alertita($bg: rgb(255, 110, 110));
  }
  
  // ASI COMO LOS MIXIN retornan una porcio tambien pueden retornar una clase directo
  // El proposito de esto es genera codigo completo es decir desde la creacion de su clase
  @mixin generate-icons($name, $icon, $color, $size: 1200px) {
    // de esta forma concatenamos un texto con una variable en SASS
    .div-icon-#{$name} {
      background: url("./images/#{$icon}");
      border: solid 2px $color;
      background-size: cover;
      background-repeat: no-repeat;
      width: $size;
      height: $size;
    }
  }
  
  @include generate-icons("phone", "phone.jpeg", rgb(252, 135, 143), 400px);
  @include generate-icons("mail", "mail.jpeg", rgb(164, 226, 123), 200px);
  @include generate-icons("search", "search.png", rgb(50, 163, 255), 400px);
  @include generate-icons("laptop", "laptop.png", rgb(215, 83, 255), 400px);
  
  // vamos a crear un bucle usando SASS
  // SASS Tambien tiene un for
  
  // Esto es un bucle que inicia en 1 y termina en 5
  @for $iteracion from 1 through 10 {
    // vamos a crear 5 container
    .container-#{$iteracion} {
      background-color: rgb($iteracion + 104, $iteracion + 32, $iteracion + 54);
      height: 200px * $iteracion / 2;
    }
  }